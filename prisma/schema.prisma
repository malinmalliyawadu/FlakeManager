datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Repository {
  id               String  @id
  name             String
  description      String
  testCount        Int     @default(0)
  flakeThreshold   Float   @default(5.0)
  failureThreshold Float   @default(10.0)
  defaultJiraBoard String?
  timePeriod       String? @default("30d")
  tests            Test[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Test {
  id             String  @id
  name           String
  file           String
  flakeRate      Float   @default(0.0)
  failureRate    Float   @default(0.0)
  excluded       Boolean @default(false)
  manualOverride Boolean @default(false)
  jiraTicketId   String?
  jiraTicketKey  String?
  jiraTicketUrl  String?

  repository   Repository @relation(fields: [repositoryId], references: [id], onDelete: Cascade)
  repositoryId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([repositoryId])
}
